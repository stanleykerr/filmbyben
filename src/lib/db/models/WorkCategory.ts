import {
  CreationOptional,
  DataTypes,
  InferAttributes,
  InferCreationAttributes,
  Model,
} from "@sequelize/core";
import { nanoid } from "nanoid";

import { sequelize } from "../sequelize";

export class WorkCategory extends Model<
  InferAttributes<WorkCategory>,
  InferCreationAttributes<WorkCategory>
> {
  declare id: CreationOptional<string>; // id can be undefined during creation (generated by nanoid)
  declare name: string;
  declare slug: string | null;

  // timestamps
  declare createdAt: CreationOptional<Date>; // createdAt can be undefined during creation
  declare updatedAt: CreationOptional<Date>; // updatedAt can be undefined during creation
}

WorkCategory.init(
  {
    id: {
      type: DataTypes.STRING,
      allowNull: false,
      primaryKey: true,
      unique: true,
      defaultValue: () => nanoid(),
    },
    name: {
      type: DataTypes.STRING,
      allowNull: false,
      unique: true,
    },
    slug: {
      type: DataTypes.STRING,
      allowNull: true,
      unique: true,
    },
    createdAt: DataTypes.DATE,
    updatedAt: DataTypes.DATE,
  },
  {
    sequelize,
    modelName: "WorkCategory",
  }
);

const addDefaultSlug = (category: WorkCategory) => {
  if (category.slug != null) return;
  category.slug = category.name.toLowerCase().replace(/ /g, "-");
};

WorkCategory.beforeCreate("addDefaultSlug", addDefaultSlug);
WorkCategory.beforeUpdate("addDefaultSlug", addDefaultSlug);
